package com.park.cloudcore.service.order.impl;

import java.util.List;
import java.util.Map;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;

import com.park.base.common.DataChangeTools;
import com.park.base.common.ResultTools;
import com.park.cloudcore.common.PublicHandleTools;
import com.park.cloudcore.common.ValidateParamsTools;
import com.park.cloudcore.common.constants.Code;
import com.park.cloudcore.common.constants.ValidateType;
import com.park.cloudcore.dao.order.OrderModifyRecordDao;
import com.park.cloudcore.domain.order.OrderModifyRecordDomain;
import com.park.cloudcore.service.order.OrderModifyRecordService;

/**
 * 
 * @author fangct on 20171129
 *
 */
@Repository(value = "orderModifyRecordServiceImpl")
public class OrderModifyRecordServiceImpl implements OrderModifyRecordService {

	private Logger logger = LoggerFactory.getLogger(this.getClass());

	@Autowired
	private OrderModifyRecordDao orderModifyRecordDao;

	public String addOrderModifyRecord(String params) {
		try {
			Map<String, String> paramMap = DataChangeTools.json2Map(params);
			// 校验参数
			String[] mustParams = { "action", "parkId", "orderNum" };
			if (!ValidateParamsTools.vaildateParams(paramMap, mustParams, ValidateType.必传)) {
				return ResultTools.setResponse(Code.ERROR_400, Code.getName(Code.ERROR_400));
			}
			int result = orderModifyRecordDao.insertOrderModifyRecord(paramMap);
			boolean success = PublicHandleTools.operDbResult(result, "", paramMap.toString());
			// 保存失败
			if (!success) {
				return ResultTools.setResponse(Code.ERROR_405, Code.getName(Code.ERROR_405));
			}
			// 保存成功
			return ResultTools.setResponse(Code.SUCCESS, Code.getName(Code.SUCCESS));
		} catch (Exception e) {
			logger.info("** 新增车牌校正记录 - 保存出现异常：" + e.getMessage());
			e.printStackTrace();
			return ResultTools.setResponse(Code.ERROR, Code.getName(Code.ERROR));
		}
	}

	public String findOrderModifyRecords(String params) {
		try {
			Map<String, String> paramMap = DataChangeTools.json2Map(params);
			
			// 分页参数初始化
			PublicHandleTools.paging(paramMap);
			List<OrderModifyRecordDomain> orderModifyRecordList = orderModifyRecordDao
					.selectOrderModifyRecords(paramMap);
			if (orderModifyRecordList == null || orderModifyRecordList.size() == 0)
				return ResultTools.setResponse(Code.ERROR_404, Code.getName(Code.ERROR_404));
			return ResultTools.setObjectResponse(Code.SUCCESS, Code.getName(Code.SUCCESS), orderModifyRecordList);
		} catch (Exception e) {
			logger.info("** 查询车牌校正记录列表 - 查询出现异常：" + e.getMessage());
			e.printStackTrace();
			return ResultTools.setResponse(Code.ERROR, Code.getName(Code.ERROR));
		}
	}

}
